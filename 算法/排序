#冒泡排序
import random

def randomilist(n):
    ilist = []
    for i in range(n):
        ilist.append(random.randrange(100))
    return ilist

def bubblesort(ilist):
    n = len(ilist)
    if n <= 1:
        return ilist
    for i in range(0,n):
        for j in range(1,n-i):
            if ilist[j] < ilist[j-1]:
                ilist[j],ilist[j-1] = ilist[j-1],ilist[j]
    return ilist

ilist = randomilist(10)
ilist = bubblesort(ilist)
print(ilist)


#选择排序
import random

def randomilist(n):
    ilist = []
    for i in range(n):
        ilist.append(random.randrange(100))
    return ilist

def selectionsort(ilist):
    n = len(ilist)
    if n <= 1:
        return ilist
    for i in range(n-1):
        for j in range(i,n-1):
            if ilist[j] > min(ilist[j:]):
                minindex = ilist.index(min(ilist[j:]))
                ilist[j],ilist[minindex] = ilist[minindex],ilist[j]
    return ilist

ilist = randomilist(10)
ilist = selectionsort(ilist)
print(ilist)


#插入排序
import random

def randomilist(n):
    ilist = []
    for i in range(n):
        ilist.append(random.randrange(100))
    return ilist

def insertsort(ilist):
    n = len(ilist)
    if n <= 1:
        return ilist
    #把ilist分成left和right，将right[0]拿出来，遍历left，找到位置插入right[0]
    for right in range(1,n):
        target = ilist[right]
        for left in range(0,right):
            if ilist[left] > target:
                ilist[left+1:right+1] = ilist[left:right]
                ilist[left] = target
                break
    return ilist
            
ilist = randomilist(10)
ilist = insertsort(ilist)
print(ilist)


#归并排序 - 分分分分分 + 合合合合合 - 分合排序
import random

def randomilist(n):
    ilist = []
    for i in range(n):
        ilist.append(random.randrange(100))
    return ilist

#mergesort负责把列表分分分分
def mergesort(ilist):
    n = len(ilist)
    if n <= 1:
        return ilist
    middle = n//2
    left,right = ilist[0:middle],ilist[middle:]
    return mergelist(mergesort(left),mergesort(right))

#mergelist负责把列表合合合合
def mergelist(left,right):
    mlist = []
    while left and right:
        if left[0] < right[0]:
            mlist.append(left.pop(0))
        else:
            mlist.append(right.pop(0))
    while left:
        mlist.append(left.pop(0))
    while right:
        mlist.append(right.pop(0))
    return mlist

ilist = randomilist(10)
ilist = mergesort(ilist)
print(ilist)


#快速排序
#选第一个数作为基准，比它小的排在左边，比它大的排在右边，循环迭代，然后 左+中+右
import random

def randomilist(n):
    ilist = []
    for i in range(n):
        ilist.append(random.randrange(100))
    return ilist

def quicksort(ilist):
    left = []
    right = []
    n = len(ilist)
    if n <= 1:
        return ilist
    for i in range(1,n):
        if ilist[0] > ilist[i]:
            left.append(ilist[i])
        else:
            right.append(ilist[i])
    return quicksort(left) + [ilist[0]] + quicksort(right)


ilist = randomilist(10)
ilist = quicksort(ilist)
print(ilist)


#记数排序法，比ilist[j]要小的数有7个，那么ilist[j]就应该在ilist[7]的位置
import random

def randomilist(n):
    ilist = []
    for i in range(n):
        ilist.append(random.randrange(100))
    return ilist

def countsort(ilist):
    n = len(ilist)
    if n <= 1:
        return ilist
    rlist = [None] * n
    for i in range(n):
        small = 0
        same = 0
        for j in range(n):
            if ilist[j] < ilist[i]:
                small += 1
            elif ilist[j] == ilist[i]:
                same += 1
        for k in range(small,small+same):
            rlist[k] = ilist[i]
    return rlist

ilist = randomilist(10)
ilist = countsort(ilist)
print(ilist)
